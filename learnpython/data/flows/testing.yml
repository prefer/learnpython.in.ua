title: Погружение в тестирование
active: 0
order: 5

**Погружение в тестирование**

Разработка ПО – это, конечно, замечательно. Изо дня в день сотни тысяч приложений выходят в свет,
апгрейдятся и расширяют свой функционал. Из-под пальцев разработчиков бодро вылетают миллиарды строк кода – сложного и не очень.
А людей, более или менее знающих любой какой-либо из языков программирования едва ли не больше, чем носителей того же английского.
Но нас интересуют только лучшие из лучших. Удобные, отлаженные приложения, работающие как часы.
Силами одинокого разработчика такие самородки появляются редко. Если вам попалось идеальное (или почти идеальное) ПО,
будьте уверены: над ним поработал грамотный **тестировщик**.

Описание курса:
---------------

Этот курс предназначен для детального погружения в тестирование и ознакомления со способами обеспечения качества ПО,
в том числе в вебе. После рассмотрения общих аспектов этого направления мы начнем погружение в мир специфических технологий и
подходов к тестированию приложений – приоткроем завесу тайны над неожиданными фичами, сорвем покровы с распространенных заблуждений.

Под руководством Сергея Чипиги участники курса подробно изучат:

**1. Введение в тестирование и обеспечение качества. Ручное тестирование**

1.1. Общая информация. Введение. Что такое обеспечение качества и тестирование, в чем различие между этими фундаментальными понятиями?
Что это за птица – инженер по качеству? Какие бывают градации в данной профессии, ее специфика и сфера ответственности,
должностные обязанности инженера по качеству.

1.2. Методики описания багов и тестов. Основные понятия тестирования: баги, тесты, фичи. Правила описания багов и тестов,
и в чем между ними разница. Стандарты качества, применяемые при составлении тест-планов, тест-кейсов, чек-листов,
метрики оценки качества тестирования.

1.3. Системы взаимодействия: баг-трекер, таск-трекер. Разработка программного обеспечения как коллективный и творческий процесс,
синергия членов команды. Проблемами, с которыми приходится сталкиваться инженерам по качеству.
Инструментарии для совместной разработки.

**2. Тестирование уровня функций: xUnit**

2.1. Структура и организация xUnit-тестов. Изучение фреймворка для тестирования кода семейства xUnit.
Знакомство с его особенностями, структурой и организацией тестов, правилами составления xUnit-тестов.
Применение xUnit-тестов в веб-фреймворке Django.

2.2. Применение mock и stub объектов в xUnit. Углубление в xUnit-тестирование.
Для чего применяются технологии моккинга и стаббинга в xUnit-тестах, какие имеются особенности и правила,
какие библиотеки используются для генерации моков.

2.3. Дополнительные возможности xUnit-тестов. Тестовое покрытие, оценка качества тестирования путем анализа результатов
тестового покрытия; тестирование баз данных с применением факторий и фикстур исходных данных; особенности тестов,
привязанных к хранилищам данных.

**3. Тестирование уровня запросов: jMeter**

3.1. Обзор Jakarta JMeter. Знакомство с мощнейшим открытым инструментарием как для нагрузочных, так и функциональных тестов.
Обзор основных возможностей, написание первого теста, анализ результатов тестирования.

3.2. Изучение возможностей JMeter, дополнительные плагины. Углубленное рассмотрение наиболее часто применяемых возможностей JMeter.
Обзор дополнительных плагинов, не входящих в основную поставку, их преимущества перед штатными средствами.

3.3. Расширенные возможности JMeter. Написание нагрузочных и функциональных тестов. Декомпозиция и блочное представление тестов.
Запись и воспроизведение поведения через прокси.

**4. Тестирование уровня UI: Selenium**

4.1. Знакомство с Selenium. Selenium IDE. Средства для тестирования UI в браузере. Selenium, его особенности и
превосходства над остальными инструментами. Что такое Selenium IDE и как его можно использовать для записи и проигрывания тестов UI”

4.2. Программирование тестов на Selenuim. Углубленное изучение Selenium. Что такое Selenium Webdriver, как применяется,
как при помощи него писать UI-тесты на языке python.

4.3. Запуск Selenium-тестов на сервере. Как использовать Selenium на удаленном сервере, как интегрироваться с
Continuous Integration на примере Jenkins. Особенности headless-запуска Selenium-тестов, способы снятия скриншотов при провале тестов.

**Количество занятий:** 12.

**Длительность занятия:** 2 часа.

**Длительность курса:** 3 месяца.

**Требования к кандидатам:** опыт тестирования, программирования, проектирования программного обеспечения, в том числе веб-разработок.

Спикер:
-------

**Сергей Чипига** – кандидат технических наук КНИТУ. В веб-разработке с 2009 года.
В настоящее время – веб-разработчик высоконагруженных приложений в компании «БАРС Груп». Начинал карьеру с простого тестировщика. Быстро развился до руководителя отдела обеспечения качества.

Рассматривает обеспечение качества ПО как актуальную науку, требующую экспериментов и исследований. Активный участник и докладчик Казанского сообщества тестировщиков. Имеет ряд публикаций по тестированию. Мастер-класс по использованию JMeter был включен в альманах портала software-testing.ru.

Ключевые навыки: jMeter, selenium, xUnit, ruby, ruby-on-rails, rspec, python, django. Имеет богатый опыт работы с заграничными клиентами, опыт работы по TDD, BDD, git-flow.
